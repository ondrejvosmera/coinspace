{"ast":null,"code":"var _jsxFileName = \"/Users/ondrejvosmera/Desktop/coinspace/src/pages/CoinPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { SingleCoin } from '../config/api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoinPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [coin, setCoin] = useState();\n  const fetchCoin = async () => {\n    try {\n      const response = await fetch(SingleCoin(id));\n      if (response.ok) {\n        const data = await response.json();\n        setCoin(data);\n      } else {\n        console.error('Failed to fetch ticker tape data');\n      }\n    } catch (error) {\n      console.error('An error occurred while fetching data:', error);\n    }\n  };\n  console.log(coin);\n  useEffect(() => {\n    fetchCoin();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"coinpage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CoinPage, \"0I7zMmOzMK850VUyUykLI+4w3Pw=\", false, function () {\n  return [useParams];\n});\n_c = CoinPage;\nexport default CoinPage;\nvar _c;\n$RefreshReg$(_c, \"CoinPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","SingleCoin","jsxDEV","_jsxDEV","CoinPage","_s","id","coin","setCoin","fetchCoin","response","fetch","ok","data","json","console","error","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ondrejvosmera/Desktop/coinspace/src/pages/CoinPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { SingleCoin } from '../config/api.js';\n\nconst CoinPage = () => {\n\n  const { id } = useParams();\n  const [coin, setCoin] = useState()\n\n  const fetchCoin = async () => {\n    try {\n      const response = await fetch(SingleCoin(id));\n      if (response.ok) {\n        const data = await response.json();\n        setCoin(data);\n      } else {\n        console.error('Failed to fetch ticker tape data');\n      }\n    } catch (error) {\n      console.error('An error occurred while fetching data:', error);\n    }\n  };\n\n  console.log(coin);\n\n  useEffect(() => {\n    fetchCoin();\n  }, []);\n\n  return (\n    <div>coinpage</div>\n  )\n}\n\nexport default CoinPage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAElC,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,UAAU,CAACK,EAAE,CAAC,CAAC;MAC5C,IAAII,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,OAAO,CAACK,IAAI,CAAC;MACf,CAAC,MAAM;QACLE,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;MACnD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE;EACF,CAAC;EAEDD,OAAO,CAACE,GAAG,CAACV,IAAI,CAAC;EAEjBT,SAAS,CAAC,MAAM;IACdW,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAe,QAAA,EAAK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEvB,CAAC;AAAAjB,EAAA,CA5BKD,QAAQ;EAAA,QAEGJ,SAAS;AAAA;AAAAuB,EAAA,GAFpBnB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
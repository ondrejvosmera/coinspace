{"ast":null,"code":"var _jsxFileName = \"/Users/ondrejvosmera/Desktop/coinspace/src/components/TickerTape.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Tape } from '../config/api.js';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TickerTape = () => {\n  _s();\n  const [ticker, setTicker] = useState([]);\n  const fetchTickerTape = async () => {\n    try {\n      const response = await fetch(Tape());\n      if (response.ok) {\n        const data = await response.json();\n        setTicker(data);\n      } else {\n        console.error('Failed to fetch ticker tape data');\n      }\n    } catch (error) {\n      console.error('An error occurred while fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTickerTape();\n  }, []);\n\n  // Define an array of coin IDs that you want to display\n  const handpickedCoinIds = ['bitcoin', 'ethereum', 'binancecoin', 'cardano', 'solana'];\n  const handpickedCoins = ticker.filter(coin => handpickedCoinIds.includes(coin.id));\n  const items = handpickedCoins.map(coin => /*#__PURE__*/_jsxDEV(Link, {\n    to: `/coins/${coin.id}`,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: coin === null || coin === void 0 ? void 0 : coin.image,\n      alt: coin.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, coin.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticker-container\",\n    children: items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n_s(TickerTape, \"DatPJRegFXh9y3cCJwE9YKqQXl8=\");\n_c = TickerTape;\nexport default TickerTape;\nvar _c;\n$RefreshReg$(_c, \"TickerTape\");","map":{"version":3,"names":["React","useState","useEffect","Tape","Link","jsxDEV","_jsxDEV","TickerTape","_s","ticker","setTicker","fetchTickerTape","response","fetch","ok","data","json","console","error","handpickedCoinIds","handpickedCoins","filter","coin","includes","id","items","map","to","children","src","image","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/ondrejvosmera/Desktop/coinspace/src/components/TickerTape.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Tape } from '../config/api.js';\nimport { Link } from 'react-router-dom';\n\nconst TickerTape = () => {\n  const [ticker, setTicker] = useState([]);\n\n  const fetchTickerTape = async () => {\n    try {\n      const response = await fetch(Tape());\n      if (response.ok) {\n        const data = await response.json();\n        setTicker(data);\n      } else {\n        console.error('Failed to fetch ticker tape data');\n      }\n    } catch (error) {\n      console.error('An error occurred while fetching data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTickerTape();\n  }, []);\n\n  // Define an array of coin IDs that you want to display\n  const handpickedCoinIds = ['bitcoin', 'ethereum', 'binancecoin', 'cardano', 'solana'];\n\n  const handpickedCoins = ticker.filter(coin => handpickedCoinIds.includes(coin.id));\n\n  const items = handpickedCoins.map(coin => (\n    <Link to={`/coins/${coin.id}`} key={coin.id}>\n      <img src={coin?.image} alt={coin.name} />\n    </Link>\n  ));\n\n  return <div className=\"ticker-container\">{items}</div>;\n};\n\nexport default TickerTape;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,IAAI,CAAC,CAAC,CAAC;MACpC,IAAIS,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,SAAS,CAACK,IAAI,CAAC;MACjB,CAAC,MAAM;QACLE,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;MACnD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdS,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,iBAAiB,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ,CAAC;EAErF,MAAMC,eAAe,GAAGX,MAAM,CAACY,MAAM,CAACC,IAAI,IAAIH,iBAAiB,CAACI,QAAQ,CAACD,IAAI,CAACE,EAAE,CAAC,CAAC;EAElF,MAAMC,KAAK,GAAGL,eAAe,CAACM,GAAG,CAACJ,IAAI,iBACpChB,OAAA,CAACF,IAAI;IAACuB,EAAE,EAAG,UAASL,IAAI,CAACE,EAAG,EAAE;IAAAI,QAAA,eAC5BtB,OAAA;MAAKuB,GAAG,EAAEP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,KAAM;MAACC,GAAG,EAAET,IAAI,CAACU;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,GADPd,IAAI,CAACE,EAAE;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErC,CACP,CAAC;EAEF,oBAAO9B,OAAA;IAAK+B,SAAS,EAAC,kBAAkB;IAAAT,QAAA,EAAEH;EAAK;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACxD,CAAC;AAAC5B,EAAA,CAjCID,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
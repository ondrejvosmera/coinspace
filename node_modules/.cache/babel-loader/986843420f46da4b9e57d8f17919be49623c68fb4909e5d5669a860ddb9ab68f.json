{"ast":null,"code":"var _jsxFileName = \"/Users/ondrejvosmera/Desktop/coinspace/src/components/CoinInfo.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoinInfo = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [coin, setCoin] = useState();\n  console.log(id);\n  const fetchCoin = async () => {\n    try {\n      const response = await fetch(SingleCoin(id));\n      if (response.ok) {\n        const data = await response.json();\n        setCoin(data);\n        console.log(data); // Log the fetched data\n      } else {\n        console.error('Failed to fetch ticker tape data');\n      }\n    } catch (error) {\n      console.error('An error occurred while fetching data:', error);\n    }\n  };\n  console.log(coin);\n  useEffect(() => {\n    fetchCoin();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"CoinInfo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(CoinInfo, \"0I7zMmOzMK850VUyUykLI+4w3Pw=\", true);\n_c = CoinInfo;\nexport default CoinInfo;\nvar _c;\n$RefreshReg$(_c, \"CoinInfo\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CoinInfo","_s","id","useParams","coin","setCoin","useState","console","log","fetchCoin","response","fetch","SingleCoin","ok","data","json","error","useEffect","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ondrejvosmera/Desktop/coinspace/src/components/CoinInfo.jsx"],"sourcesContent":["import React from 'react'\n\nconst CoinInfo = () => {\n\n    const { id } = useParams();\n    const [coin, setCoin] = useState()\n  \n    console.log(id);\n  \n    const fetchCoin = async () => {\n      try {\n        const response = await fetch(SingleCoin(id));\n        if (response.ok) {\n          const data = await response.json();\n          setCoin(data);\n          console.log(data); // Log the fetched data\n        } else {\n          console.error('Failed to fetch ticker tape data');\n        }\n      } catch (error) {\n        console.error('An error occurred while fetching data:', error);\n      }\n    };\n  \n    console.log(coin);\n  \n    useEffect(() => {\n      fetchCoin();\n    }, []);\n\n  return (\n    <div>CoinInfo</div>\n  )\n}\n\nexport default CoinInfo"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM;IAAEC;EAAG,CAAC,GAAGC,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,CAAC;EAElCC,OAAO,CAACC,GAAG,CAACN,EAAE,CAAC;EAEf,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,UAAU,CAACV,EAAE,CAAC,CAAC;MAC5C,IAAIQ,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCV,OAAO,CAACS,IAAI,CAAC;QACbP,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC,CAAC,CAAC;MACrB,CAAC,MAAM;QACLP,OAAO,CAACS,KAAK,CAAC,kCAAkC,CAAC;MACnD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE;EACF,CAAC;EAEDT,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EAEjBa,SAAS,CAAC,MAAM;IACdR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAER,oBACEV,OAAA;IAAAmB,QAAA,EAAK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEvB,CAAC;AAAArB,EAAA,CA/BKD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAiCd,eAAeA,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
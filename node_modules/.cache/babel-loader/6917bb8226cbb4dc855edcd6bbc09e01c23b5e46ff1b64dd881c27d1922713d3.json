{"ast":null,"code":"var _jsxFileName = \"/Users/ondrejvosmera/Desktop/coinspace/src/components/CoinInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Navbar from './Navbar.jsx';\nimport Footer from './Footer.jsx';\nimport { HistoricalChart, SingleCoin } from '../config/api.js';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport ChartButtons from './ChartButtons.jsx';\nimport ReactLoading from \"react-loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst CoinInfo = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [coin, setCoin] = useState(null);\n  const [historicalData, setHistoricalData] = useState(null);\n  const [days, setDays] = useState(1);\n  useEffect(() => {\n    const fetchCoinData = async () => {\n      try {\n        const coinResponse = await fetch(SingleCoin(id));\n        const coinData = await coinResponse.json();\n        setCoin(coinData);\n        const historicalResponse = await fetch(HistoricalChart(id, days));\n        const historicalData = await historicalResponse.json();\n        setHistoricalData(historicalData.prices);\n      } catch (error) {\n        console.error('An error occurred while fetching data:', error);\n      }\n    };\n    fetchCoinData();\n  }, [id, days]);\n  if (!coin || !historicalData) {\n    return /*#__PURE__*/_jsxDEV(ReactLoading, {\n      type: \"bubbles\",\n      color: \"#fff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n  const getBorderColor = name => {\n    // ... your existing code\n  };\n  function formatText(text) {\n    // ... your existing code\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coin-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-col\",\n        children: historicalData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-buttons\",\n            children: chartDays.map(day => /*#__PURE__*/_jsxDEV(ChartButtons, {\n              onClick: () => setDays(day.value),\n              selected: day.value === days,\n              children: day.label\n            }, day.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            className: \"chart\",\n            data: {\n              labels: historicalData.map(coin => {\n                // ... your existing code\n              }),\n              datasets: [{\n                data: historicalData.map(coin => coin[1]),\n                label: `Price (Past ${days} Days)`,\n                borderColor: getBorderColor(coin.name)\n              }]\n            },\n            options: {\n              elements: {\n                point: {\n                  radius: 1\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(CoinInfo, \"WrI1+usT0Qsb2U4vlJdnIah0CWY=\", false, function () {\n  return [useParams];\n});\n_c = CoinInfo;\nexport default CoinInfo;\nvar _c;\n$RefreshReg$(_c, \"CoinInfo\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Navbar","Footer","HistoricalChart","SingleCoin","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ChartButtons","ReactLoading","jsxDEV","_jsxDEV","Fragment","_Fragment","register","CoinInfo","_s","id","coin","setCoin","historicalData","setHistoricalData","days","setDays","fetchCoinData","coinResponse","fetch","coinData","json","historicalResponse","prices","error","console","type","color","fileName","_jsxFileName","lineNumber","columnNumber","getBorderColor","name","formatText","text","children","className","chartDays","map","day","onClick","value","selected","label","data","labels","datasets","borderColor","options","elements","point","radius","_c","$RefreshReg$"],"sources":["/Users/ondrejvosmera/Desktop/coinspace/src/components/CoinInfo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Navbar from './Navbar.jsx';\nimport Footer from './Footer.jsx';\nimport { HistoricalChart, SingleCoin } from '../config/api.js';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport ChartButtons from './ChartButtons.jsx';\nimport ReactLoading from \"react-loading\";\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst CoinInfo = () => {\n    const { id } = useParams();\n    const [coin, setCoin] = useState(null);\n    const [historicalData, setHistoricalData] = useState(null);\n    const [days, setDays] = useState(1);\n\n    useEffect(() => {\n        const fetchCoinData = async () => {\n            try {\n                const coinResponse = await fetch(SingleCoin(id));\n                const coinData = await coinResponse.json();\n                setCoin(coinData);\n\n                const historicalResponse = await fetch(HistoricalChart(id, days));\n                const historicalData = await historicalResponse.json();\n                setHistoricalData(historicalData.prices);\n            } catch (error) {\n                console.error('An error occurred while fetching data:', error);\n            }\n        };\n\n        fetchCoinData();\n    }, [id, days]);\n\n    if (!coin || !historicalData) {\n        return <ReactLoading type=\"bubbles\" color=\"#fff\" />;\n    }\n\n    const getBorderColor = (name) => {\n        // ... your existing code\n    };\n\n    function formatText(text) {\n        // ... your existing code\n    }\n\n    return (\n        <>\n            <Navbar />\n            <div className=\"coin-info-container\">\n                <div className=\"left-col\">\n                    {/* ... your existing code */}\n                </div>\n                <div className=\"right-col\">\n                    {historicalData && (\n                        <>\n                            <div className='chart-buttons'>\n                                {chartDays.map((day) => (\n                                    <ChartButtons key={day.value} onClick={() => setDays(day.value)} selected={day.value === days}>\n                                        {day.label}\n                                    </ChartButtons>\n                                ))}\n                            </div>\n                            <Line\n                                className='chart'\n                                data={{\n                                    labels: historicalData.map((coin) => {\n                                        // ... your existing code\n                                    }),\n                                    datasets: [\n                                        {\n                                            data: historicalData.map((coin) => coin[1]),\n                                            label: `Price (Past ${days} Days)`,\n                                            borderColor: getBorderColor(coin.name),\n                                        },\n                                    ],\n                                }}\n                                options={{\n                                    elements: {\n                                        point: {\n                                            radius: 1,\n                                        },\n                                    },\n                                }}\n                            />\n                        </>\n                    )}\n                </div>\n            </div>\n            <Footer />\n        </>\n    );\n};\n\nexport default CoinInfo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,eAAe,EAAEC,UAAU,QAAQ,kBAAkB;AAC9D,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAC1H,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,YAAY,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzCb,OAAO,CAACc,QAAQ,CAACb,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE/F,MAAMQ,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAG,CAAC,GAAGxB,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACyB,IAAI,EAAEC,OAAO,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC4B,cAAc,EAAEC,iBAAiB,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC8B,IAAI,EAAEC,OAAO,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACZ,MAAMiC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,YAAY,GAAG,MAAMC,KAAK,CAAC7B,UAAU,CAACoB,EAAE,CAAC,CAAC;QAChD,MAAMU,QAAQ,GAAG,MAAMF,YAAY,CAACG,IAAI,CAAC,CAAC;QAC1CT,OAAO,CAACQ,QAAQ,CAAC;QAEjB,MAAME,kBAAkB,GAAG,MAAMH,KAAK,CAAC9B,eAAe,CAACqB,EAAE,EAAEK,IAAI,CAAC,CAAC;QACjE,MAAMF,cAAc,GAAG,MAAMS,kBAAkB,CAACD,IAAI,CAAC,CAAC;QACtDP,iBAAiB,CAACD,cAAc,CAACU,MAAM,CAAC;MAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAClE;IACJ,CAAC;IAEDP,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACP,EAAE,EAAEK,IAAI,CAAC,CAAC;EAEd,IAAI,CAACJ,IAAI,IAAI,CAACE,cAAc,EAAE;IAC1B,oBAAOT,OAAA,CAACF,YAAY;MAACwB,IAAI,EAAC,SAAS;MAACC,KAAK,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvD;EAEA,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC7B;EAAA,CACH;EAED,SAASC,UAAUA,CAACC,IAAI,EAAE;IACtB;EAAA;EAGJ,oBACI/B,OAAA,CAAAE,SAAA;IAAA8B,QAAA,gBACIhC,OAAA,CAACjB,MAAM;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV3B,OAAA;MAAKiC,SAAS,EAAC,qBAAqB;MAAAD,QAAA,gBAChChC,OAAA;QAAKiC,SAAS,EAAC;MAAU;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpB,CAAC,eACN3B,OAAA;QAAKiC,SAAS,EAAC,WAAW;QAAAD,QAAA,EACrBvB,cAAc,iBACXT,OAAA,CAAAE,SAAA;UAAA8B,QAAA,gBACIhC,OAAA;YAAKiC,SAAS,EAAC,eAAe;YAAAD,QAAA,EACzBE,SAAS,CAACC,GAAG,CAAEC,GAAG,iBACfpC,OAAA,CAACH,YAAY;cAAiBwC,OAAO,EAAEA,CAAA,KAAMzB,OAAO,CAACwB,GAAG,CAACE,KAAK,CAAE;cAACC,QAAQ,EAAEH,GAAG,CAACE,KAAK,KAAK3B,IAAK;cAAAqB,QAAA,EACzFI,GAAG,CAACI;YAAK,GADKJ,GAAG,CAACE,KAAK;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEd,CACjB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACN3B,OAAA,CAACb,IAAI;YACD8C,SAAS,EAAC,OAAO;YACjBQ,IAAI,EAAE;cACFC,MAAM,EAAEjC,cAAc,CAAC0B,GAAG,CAAE5B,IAAI,IAAK;gBACjC;cAAA,CACH,CAAC;cACFoC,QAAQ,EAAE,CACN;gBACIF,IAAI,EAAEhC,cAAc,CAAC0B,GAAG,CAAE5B,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC3CiC,KAAK,EAAG,eAAc7B,IAAK,QAAO;gBAClCiC,WAAW,EAAEhB,cAAc,CAACrB,IAAI,CAACsB,IAAI;cACzC,CAAC;YAET,CAAE;YACFgB,OAAO,EAAE;cACLC,QAAQ,EAAE;gBACNC,KAAK,EAAE;kBACHC,MAAM,EAAE;gBACZ;cACJ;YACJ;UAAE;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA,eACJ;MACL;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACN3B,OAAA,CAAChB,MAAM;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACZ,CAAC;AAEX,CAAC;AAACtB,EAAA,CAlFID,QAAQ;EAAA,QACKtB,SAAS;AAAA;AAAAmE,EAAA,GADtB7C,QAAQ;AAoFd,eAAeA,QAAQ;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/ondrejvosmera/Desktop/coinspace/src/components/TickerTape.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Tape } from '../config/api.js';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TickerTape = () => {\n  _s();\n  const [ticker, setTicker] = useState([]);\n  const [tickerIndex, setTickerIndex] = useState(0);\n  const fetchTickerTape = async () => {\n    try {\n      const response = await fetch(Tape());\n      if (response.ok) {\n        const data = await response.json();\n        setTicker(data);\n      } else {\n        console.error('Failed to fetch ticker tape data');\n      }\n    } catch (error) {\n      console.error('An error occurred while fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTickerTape();\n  }, []);\n  const handpickedCoinIds = ['bitcoin', 'ethereum', 'binancecoin', 'cardano', 'solana'];\n  const handpickedCoins = ticker.filter(coin => handpickedCoinIds.includes(coin.id));\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTickerIndex(prevIndex => (prevIndex + 1) % handpickedCoins.length);\n    }, 5000); // Adjust the interval as needed (5 seconds in this example)\n\n    return () => clearInterval(interval);\n  }, [handpickedCoins.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticker-container\",\n    children: handpickedCoins.map((coin, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/coins/${coin.id}`,\n      className: `ticker-item ${index === tickerIndex ? 'visible' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: coin === null || coin === void 0 ? void 0 : coin.image,\n        alt: coin.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, coin.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TickerTape, \"DplGFfmi+Z1Yg5UIIBAtPqUa8Aw=\");\n_c = TickerTape;\nexport default TickerTape;\nvar _c;\n$RefreshReg$(_c, \"TickerTape\");","map":{"version":3,"names":["React","useState","useEffect","Tape","Link","jsxDEV","_jsxDEV","TickerTape","_s","ticker","setTicker","tickerIndex","setTickerIndex","fetchTickerTape","response","fetch","ok","data","json","console","error","handpickedCoinIds","handpickedCoins","filter","coin","includes","id","interval","setInterval","prevIndex","length","clearInterval","className","children","map","index","to","src","image","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ondrejvosmera/Desktop/coinspace/src/components/TickerTape.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Tape } from '../config/api.js';\nimport { Link } from 'react-router-dom';\n\nconst TickerTape = () => {\n  const [ticker, setTicker] = useState([]);\n  const [tickerIndex, setTickerIndex] = useState(0);\n\n  const fetchTickerTape = async () => {\n    try {\n      const response = await fetch(Tape());\n      if (response.ok) {\n        const data = await response.json();\n        setTicker(data);\n      } else {\n        console.error('Failed to fetch ticker tape data');\n      }\n    } catch (error) {\n      console.error('An error occurred while fetching data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTickerTape();\n  }, []);\n\n  const handpickedCoinIds = ['bitcoin', 'ethereum', 'binancecoin', 'cardano', 'solana'];\n\n  const handpickedCoins = ticker.filter(coin => handpickedCoinIds.includes(coin.id));\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTickerIndex(prevIndex => (prevIndex + 1) % handpickedCoins.length);\n    }, 5000); // Adjust the interval as needed (5 seconds in this example)\n\n    return () => clearInterval(interval);\n  }, [handpickedCoins.length]);\n\n  return (\n    <div className=\"ticker-container\">\n      {handpickedCoins.map((coin, index) => (\n        <Link\n          to={`/coins/${coin.id}`}\n          key={coin.id}\n          className={`ticker-item ${index === tickerIndex ? 'visible' : ''}`}\n        >\n          <img src={coin?.image} alt={coin.name} />\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default TickerTape;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,IAAI,CAAC,CAAC,CAAC;MACpC,IAAIW,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCR,SAAS,CAACO,IAAI,CAAC;MACjB,CAAC,MAAM;QACLE,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;MACnD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdW,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,iBAAiB,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ,CAAC;EAErF,MAAMC,eAAe,GAAGb,MAAM,CAACc,MAAM,CAACC,IAAI,IAAIH,iBAAiB,CAACI,QAAQ,CAACD,IAAI,CAACE,EAAE,CAAC,CAAC;EAElFxB,SAAS,CAAC,MAAM;IACd,MAAMyB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjChB,cAAc,CAACiB,SAAS,IAAI,CAACA,SAAS,GAAG,CAAC,IAAIP,eAAe,CAACQ,MAAM,CAAC;IACvE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMC,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACL,eAAe,CAACQ,MAAM,CAAC,CAAC;EAE5B,oBACExB,OAAA;IAAK0B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC9BX,eAAe,CAACY,GAAG,CAAC,CAACV,IAAI,EAAEW,KAAK,kBAC/B7B,OAAA,CAACF,IAAI;MACHgC,EAAE,EAAG,UAASZ,IAAI,CAACE,EAAG,EAAE;MAExBM,SAAS,EAAG,eAAcG,KAAK,KAAKxB,WAAW,GAAG,SAAS,GAAG,EAAG,EAAE;MAAAsB,QAAA,eAEnE3B,OAAA;QAAK+B,GAAG,EAAEb,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc,KAAM;QAACC,GAAG,EAAEf,IAAI,CAACgB;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAHpCpB,IAAI,CAACE,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIR,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpC,EAAA,CA/CID,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AAiDhB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
[{"/Users/ondrejvosmera/Desktop/coinspace/src/index.js":"1","/Users/ondrejvosmera/Desktop/coinspace/src/App.js":"2","/Users/ondrejvosmera/Desktop/coinspace/src/pages/Home.jsx":"3","/Users/ondrejvosmera/Desktop/coinspace/src/components/Header.jsx":"4","/Users/ondrejvosmera/Desktop/coinspace/src/components/tickerTape.jsx":"5","/Users/ondrejvosmera/Desktop/coinspace/src/config/api.js":"6","/Users/ondrejvosmera/Desktop/coinspace/src/components/TickerTape.jsx":"7","/Users/ondrejvosmera/Desktop/coinspace/src/components/Main.jsx":"8","/Users/ondrejvosmera/Desktop/coinspace/src/components/Coin.jsx":"9","/Users/ondrejvosmera/Desktop/coinspace/src/pages/CoinPage.jsx":"10","/Users/ondrejvosmera/Desktop/coinspace/src/components/CoinInfo.jsx":"11","/Users/ondrejvosmera/Desktop/coinspace/src/config/chartData.js":"12","/Users/ondrejvosmera/Desktop/coinspace/src/components/ChartButtons.jsx":"13","/Users/ondrejvosmera/Desktop/coinspace/src/components/Navbar.jsx":"14","/Users/ondrejvosmera/Desktop/coinspace/src/components/Footer.jsx":"15"},{"size":420,"mtime":1700497656000,"results":"16","hashOfConfig":"17"},{"size":379,"mtime":1700497656000,"results":"18","hashOfConfig":"17"},{"size":277,"mtime":1700497656000,"results":"19","hashOfConfig":"17"},{"size":215,"mtime":1700497656000,"results":"20","hashOfConfig":"17"},{"size":497,"mtime":1692116512040,"results":"21","hashOfConfig":"17"},{"size":605,"mtime":1701086124990,"results":"22","hashOfConfig":"17"},{"size":2242,"mtime":1701086171729,"results":"23","hashOfConfig":"17"},{"size":4427,"mtime":1702301503161,"results":"24","hashOfConfig":"17"},{"size":722,"mtime":1700733454480,"results":"25","hashOfConfig":"17"},{"size":174,"mtime":1700646965271,"results":"26","hashOfConfig":"17"},{"size":5306,"mtime":1702737721909,"results":"27","hashOfConfig":"17"},{"size":238,"mtime":1700676671781,"results":"28","hashOfConfig":"17"},{"size":349,"mtime":1700741043939,"results":"29","hashOfConfig":"17"},{"size":263,"mtime":1700739830773,"results":"30","hashOfConfig":"17"},{"size":214,"mtime":1700739939303,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1vo54ss",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/ondrejvosmera/Desktop/coinspace/src/index.js",[],[],[],"/Users/ondrejvosmera/Desktop/coinspace/src/App.js",[],[],"/Users/ondrejvosmera/Desktop/coinspace/src/pages/Home.jsx",[],[],"/Users/ondrejvosmera/Desktop/coinspace/src/components/Header.jsx",[],[],"/Users/ondrejvosmera/Desktop/coinspace/src/components/tickerTape.jsx",[],[],"/Users/ondrejvosmera/Desktop/coinspace/src/config/api.js",[],[],"/Users/ondrejvosmera/Desktop/coinspace/src/components/TickerTape.jsx",[],[],"/Users/ondrejvosmera/Desktop/coinspace/src/components/Main.jsx",[],[],"/Users/ondrejvosmera/Desktop/coinspace/src/components/Coin.jsx",[],[],"/Users/ondrejvosmera/Desktop/coinspace/src/pages/CoinPage.jsx",[],[],"/Users/ondrejvosmera/Desktop/coinspace/src/components/CoinInfo.jsx",["79","80"],[],"import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport Navbar from './Navbar.jsx';\nimport Footer from './Footer.jsx';\nimport { HistoricalChart, SingleCoin } from '../config/api.js';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { chartDays } from '../config/chartData.js';\nimport ChartButtons from './ChartButtons.jsx';\nimport ReactLoading from 'react-loading';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst toTop = () => {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n};\n\nconst CoinInfo = () => {\n\n    const { id } = useParams();\n    const [coin, setCoin] = useState()\n    const [historicalData, setHistoricalData] = useState();\n    const [days, setDays] = useState(1);\n  \n    const fetchCoin = async () => {\n      try {\n        const response = await fetch(SingleCoin(id));\n        if (response.ok) {\n          const data = await response.json();\n          setCoin(data);\n        } else {\n          console.error('Failed to fetch ticker tape data');\n        }\n      } catch (error) {\n        console.error('An error occurred while fetching data:', error);\n      }\n    };\n  \n    useEffect(() => {\n      fetchCoin();\n    }, [days]);\n\n    const fetchHistoricalData = async () => {\n      try {\n        const response = await fetch(HistoricalChart(id, days));\n        if (response.ok) {\n          const data = await response.json();\n          setHistoricalData(data.prices);\n        } else {\n          console.error('Failed to fetch Historical data');\n        }\n      } catch (error) {\n        console.error('An error occurred while fetching data:', error);\n      }\n    };\n\n    useEffect(() => {\n      fetchHistoricalData();\n      toTop();\n    }, [days]);\n\n    const getBorderColor = (name) => {\n      const colorMapping = {\n        bitcoin: \"#FFA500\",\n        ethereum: \"#48CBD9\",\n        tether: \"#26A17B\",\n        bnb: \"#F3BA2F\",\n        xrp: \"#FFFFFF\",\n        solana: \"#00FFA3\",\n        cardano: \"#0033AD\",\n        dogecoin: \"#E1B303\",\n        tron: \"#D1001F\"\n      };\n    \n      return colorMapping[name.toLowerCase()] || \"#00BCE3\";\n    };\n\n    function formatText(text) {\n      // Remove HTML tags from the text\n      const textWithoutHTML = text.replace(/<\\/?[^>]+(>|$)/g, '');\n    \n      // Split the text into an array of sentences\n      const sentences = textWithoutHTML.split(/(?<!\\w\\.\\w.)(?<![A-Z][a-z]\\.)(?<=\\.|\\?)\\s/);\n    \n      // Take the first 5 sentences\n      const limitedText = sentences.slice(0, 5).join(' ');\n    \n      return limitedText;\n    }\n\n  return (\n    <>\n    <Navbar />\n    <div className=\"coin-info-container\">\n      <div className=\"left-col\">\n      {(!coin || !historicalData) ? (\n         <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n            <p>Too many API calls... (ERROR 429)</p>\n            <ReactLoading type=\"bubbles\" color=\"white\" height=\"100px\" width=\"100px\" />\n          </div>\n          ) : (\n            <>\n            <div className=\"coin-title\">\n              <img src={coin.image.large} alt={coin.name} />\n              <h2 className='title'>{coin.name}</h2>\n              <p className='coin-ticker'>{coin.symbol}</p>\n            </div>\n            <p className='coin-price'>${coin.market_data.current_price.usd.toLocaleString()}</p>\n            <p className='coin-mcap'>Market cap: ${coin.market_data.market_cap.usd.toLocaleString()}</p>\n            <p>{formatText(coin.description.en)}</p>\n          </>\n          )}\n      </div>\n      <div className=\"right-col\">\n      {(!coin || !historicalData) ? (\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n              <p>Too many API calls... (ERROR 429)</p>\n              <ReactLoading type=\"bubbles\" color=\"white\" height=\"100px\" width=\"100px\" />\n          </div>\n          ) : (\n            <>\n          <div className='chart-buttons'>\n            {chartDays.map((day) => (\n              <ChartButtons key={day.value} onClick={() => setDays(day.value)} selected={day.value === days}>\n                {day.label}\n              </ChartButtons>\n            ))}\n          </div>\n          <Line\n          className='chart'\n          data = {{\n            labels: historicalData.map((coin) => {\n              let date = new Date(coin[0]);\n              let time = date.getHours() > 12\n              ? `${date.getHours() - 12} : ${date.getMinutes()} PM`\n              : `${date.getHours()} : ${date.getMinutes()} AM`\n\n              return days === 1 ? time : date.toLocaleDateString()\n            }),\n\n            datasets: [\n              {\n                data: historicalData.map((coin) => coin[1]),\n                label: `Price (Past ${days} Days)`,\n                borderColor: getBorderColor(coin.name),\n                \n              }\n            ]\n          }}\n          options={{\n            elements: {\n              point: {\n                radius: 1,\n              }\n            }\n          }}\n          />\n        </>\n      )}\n      </div>\n    </div>\n    <Footer />\n    </>\n  )\n}\n\nexport default CoinInfo;","/Users/ondrejvosmera/Desktop/coinspace/src/config/chartData.js",[],[],"/Users/ondrejvosmera/Desktop/coinspace/src/components/ChartButtons.jsx",[],[],"/Users/ondrejvosmera/Desktop/coinspace/src/components/Navbar.jsx",[],[],"/Users/ondrejvosmera/Desktop/coinspace/src/components/Footer.jsx",[],[],{"ruleId":"81","severity":1,"message":"82","line":50,"column":8,"nodeType":"83","endLine":50,"endColumn":14,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":69,"column":8,"nodeType":"83","endLine":69,"endColumn":14,"suggestions":"86"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCoin'. Either include it or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has a missing dependency: 'fetchHistoricalData'. Either include it or remove the dependency array.",["88"],{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [days, fetchCoin]",{"range":"93","text":"94"},"Update the dependencies array to be: [days, fetchHistoricalData]",{"range":"95","text":"96"},[1379,1385],"[days, fetchCoin]",[1899,1905],"[days, fetchHistoricalData]"]